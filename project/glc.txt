Tokens / Terminales: 
principal
'('
')'
'{'
'}'
IDENTIFICADOR
regresa
';'
si
mientras
','
'!'
ENTERO
REAL
verdadero
falso
<
>
==
=
+
-
*
/

No Terminales:
inicio
principal
bloque_de_funciones
funcion
argumentos
bloque_de_codigo
declaraciones
sentencias
si
mientras
asignacion
expresion
aritmetica
valor_aritmetico
logica
valor_logico
relacional

Inicial:
inicio

Producciones:
<inicio> ::= <bloque_de_funciones> <principal> | <principal>


<principal> ::= principal '(' ')' '{' [<declaraciones>]* [<sentencias>] '}' 


<bloque_de_funciones> ::= <funcion> <bloque_de_funciones>

<sentencias> ::= <sentencia> [<sentencias>]

<sentencia> ::= <si> | <mientras> | <asignacion>


<funcion> ::= <tipo_de_dato> IDENTIFICADOR '(' [<argumentos>] ')' '{' <bloque_de_codigo> regresa IDENTIFICADOR ';' '}'

<tipo_de_dato> ::= real | entero | logico

<argumentos> ::= <argumento> [',' <argumentos>]

<argumento> ::= <tipo_de_dato> IDENTIFICADOR

<bloque_de_codigo> ::= [<declaraciones>]* [<sentencias>]*

<declaraciones> ::= <tipo_de_dato> IDENTIFICADOR ';'


<si> ::= si '(' IDENTIFICADOR ')' '{' [<sentencias>]* '}'

<mientras> ::= mientras '(' IDENTIFICADOR ')' '{' [<sentencias>]* '}'

<asignacion> ::= IDENTIFICADOR '=' <expresion> ';'

<expresion> ::= <aritmetica> | <logica> | <relacional> | '!' IDENTIFICADOR

<aritmetica> ::= '(' <aritmetica> ')' | <valor_aritmetico> | <aritmetica> [<operador_aritmetico> <aritmetica>]

<operador_aritmetico> ::= '*' | '+' | '/' | '^' | '-'

<valor_aritmetico> ::= IDENTIFICADOR | ENTERO | REAL | <llamada_funcion>

<llamada_funcion> ::= IDENTIFICADOR '(' [<argumentos_funcion>] ')'

<argumentos_funcion> ::= IDENTIFICADORÂ [',' <argumentos_funcion>]

<logica> ::= '(' <logica> ')' | <valor_logico> | <logica> [<operador_logico> <logica>]

<valor_logico> ::= IDENTIFICADOR | LOGICO | <llamada_funcion>

<relacional> ::= <valor_aritmetico> OPERADOR_RELACIONAL <valor_aritmetico>